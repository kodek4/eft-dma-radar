name: Create Release

on:
  # Manual trigger - preferred method for custom release notes
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.2.3)'
        required: true
        type: string
      release_notes:
        description: 'Custom release notes (supports markdown)'
        required: true
        type: string
        default: |
          ## What's New
          
          ### Features
          - 
          
          ### Improvements
          - 
          
          ### Bug Fixes
          - 
      prerelease:
        description: 'Mark as pre-release'
        required: false
        type: boolean
        default: false
      test_mode:
        description: 'Test mode (creates draft release)'
        required: false
        type: boolean
        default: false
  
  # Automatic trigger on tag push (fallback)
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build EFT Project
      run: |
        dotnet publish eft-dma-radar/eft-dma-radar.csproj -c Release -r win-x64 --self-contained false -o ./eft-build
        
    - name: Build Arena Project
      run: |
        dotnet publish arena-dma-radar/arena-dma-radar.csproj -c Release -r win-x64 --self-contained false -o ./arena-build
        
    - name: Create ZIP archives
      run: |
        $version = if ('${{ github.event.inputs.version }}') { '${{ github.event.inputs.version }}' } else { '${{ github.ref_name }}' }
        $version = $version -replace '^v', ''
        
        Compress-Archive -Path ./eft-build/* -DestinationPath "./EFT_DMA_v$version`_kodek4.zip"
        Compress-Archive -Path ./arena-build/* -DestinationPath "./Arena_DMA_v$version`_kodek4.zip"
        
        # Create source code archive (exclude build artifacts and git)
        $sourceFiles = Get-ChildItem -Path . -Recurse | Where-Object { 
          $_.FullName -notmatch '\\(bin|obj|\.git|\.vs|\.cursor|Users)\\' -and
          $_.FullName -notmatch '\\(eft-build|arena-build)\\' -and
          $_.Name -notmatch '\.(user|tmp|temp|cache)$'
        }
        $sourceFiles | Compress-Archive -DestinationPath "./DMA_Radar_Source_v$version`_kodek4.zip"
        
    - name: Generate release notes
      id: release_notes
      run: |
        $version = if ('${{ github.event.inputs.version }}') { '${{ github.event.inputs.version }}' } else { '${{ github.ref_name }}' }
        
        if ('${{ github.event.inputs.release_notes }}') {
          # Manual dispatch - use custom notes
          $notes = @"
        ${{ github.event.inputs.release_notes }}
        
        ## Downloads
        
        - **EFT Build**: `EFT_DMA_v$($version -replace '^v', '')_kodek4.zip`
        - **Arena Build**: `Arena_DMA_v$($version -replace '^v', '')_kodek4.zip`
        - **Source Code**: `DMA_Radar_Source_v$($version -replace '^v', '')_kodek4.zip`
        "@
        } else {
          # Tag-based - generate basic notes
          $notes = @"
        ## Downloads
        
        - **EFT Build**: `EFT_DMA_v$($version -replace '^v', '')_kodek4.zip`
        - **Arena Build**: `Arena_DMA_v$($version -replace '^v', '')_kodek4.zip`
        - **Source Code**: `DMA_Radar_Source_v$($version -replace '^v', '')_kodek4.zip`
        "@
        }
        
        $notes | Out-File -FilePath release_notes.txt -Encoding utf8
        echo "notes_file=release_notes.txt" >> $env:GITHUB_OUTPUT
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.event.inputs.version || github.ref_name }}
        name: "EFT DMA Radar | kodek4 fork ${{ github.event.inputs.version || github.ref_name }}"
        body_path: ${{ steps.release_notes.outputs.notes_file }}
        files: |
          ./EFT_DMA_v*_kodek4.zip
          ./Arena_DMA_v*_kodek4.zip
          ./DMA_Radar_Source_v*_kodek4.zip
        draft: ${{ github.event.inputs.test_mode || false }}
        prerelease: ${{ github.event.inputs.prerelease || false }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 